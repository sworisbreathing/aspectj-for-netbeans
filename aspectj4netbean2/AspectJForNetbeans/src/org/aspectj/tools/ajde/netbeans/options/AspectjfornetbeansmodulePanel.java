/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.aspectj.tools.ajde.netbeans.options;

import org.aspectj.tools.ajde.netbeans.compileonsave.CompileOnSave;
import org.openide.util.NbPreferences;

public final class AspectjfornetbeansmodulePanel extends javax.swing.JPanel {

   private final AspectjfornetbeansmoduleOptionsPanelController controller;

   AspectjfornetbeansmodulePanel(AspectjfornetbeansmoduleOptionsPanelController controller) {
      this.controller = controller;
      initComponents();
   // TODO listen to changes in form fields and call controller.changed()
   }

   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      cosCheckbox = new javax.swing.JCheckBox();

      setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

      org.openide.awt.Mnemonics.setLocalizedText(cosCheckbox, "Compile On Save");
      cosCheckbox.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            cosCheckboxActionPerformed(evt);
         }
      });
      add(cosCheckbox);
   }// </editor-fold>//GEN-END:initComponents
    private void cosCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cosCheckboxActionPerformed
    // TODO add your handling code here:
    }//GEN-LAST:event_cosCheckboxActionPerformed

   void load() {

      cosCheckbox.setSelected(NbPreferences.forModule(AspectjfornetbeansmodulePanel.class).getBoolean("compileOnSave", false));

   }

   void store() {
      boolean cos = cosCheckbox.isSelected();
      NbPreferences.forModule(AspectjfornetbeansmodulePanel.class).putBoolean("compileOnSave", cos);
      if (cos) {
        CompileOnSave.disableCompileOnSave();
        CompileOnSave.enableCompileOnSave();
      } else {
         CompileOnSave.disableCompileOnSave();
      }

   }

   boolean valid() {
      // TODO check whether form is consistent and complete
      return true;
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JCheckBox cosCheckbox;
   // End of variables declaration//GEN-END:variables
}
