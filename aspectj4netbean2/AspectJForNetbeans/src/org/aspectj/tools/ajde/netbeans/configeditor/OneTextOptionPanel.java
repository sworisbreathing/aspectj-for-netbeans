/*
 * OneTextOptionPanel.java
 *
 * Created on November 24, 2007, 7:50 PM
 */
package org.aspectj.tools.ajde.netbeans.configeditor;

import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.aspectj.tools.ajde.netbeans.configeditor.AjcOptions.AjcOption;

/**
 *
 * @author  Ramos
 */
public class OneTextOptionPanel extends javax.swing.JPanel {

    private AjcOption option;

    /** Creates new form OneTextOptionPanel */
    OneTextOptionPanel(AjcOptions.AjcOption option) {
        this.option = option;
        initComponents();
//        this.optionLabel.setText(optionLabel);
//        this.optionText.setText(optionText);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        optionLabel = new javax.swing.JLabel();
        optionText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        optionLabel.setText(option.getLabel());

        optionText.setText(option.getValue());
        optionText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                updateValue(evt);
            }
        });

        jButton1.setText(org.openide.util.NbBundle.getMessage(OneTextOptionPanel.class, "OneTextOptionPanel.jButton1.text")); // NOI18N
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showFileChooser(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(optionText, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(optionLabel))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(optionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(optionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void updateValue(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_updateValue
        // TODO add your handling code here:
        option.setValue(optionText.getText());
    }//GEN-LAST:event_updateValue

    private void showFileChooser(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showFileChooser
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "Directories and Jar Files", "jar");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            String path = chooser.getSelectedFile().getAbsolutePath();
            optionText.setText(path);
            option.setValue(path);
        }
    }//GEN-LAST:event_showFileChooser
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel optionLabel;
    private javax.swing.JTextField optionText;
    // End of variables declaration//GEN-END:variables

//    public JLabel getOptionLabel() {
//        return optionLabel;
//    }
//
//    public JTextField getOptionText() {
//        return optionText;
//    }
}
